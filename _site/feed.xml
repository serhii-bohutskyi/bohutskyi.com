<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>accent - Articles</title>
    <description></description>
    <link>
    http://localhost:4000</link>
    
      
      <item>
        <title>Getter Template with Optional&lt;&gt; for IntelliJ IDEA</title>
        
          <description>&lt;p&gt;If you are working with Java 8 and Intellij IDEA, good practice to use
Optional for getters, of course depending on logic as well.
I’ll show how to quick configure IDE for generation such getters&lt;/p&gt;

</description>
        
        <pubDate>Sun, 02 Jul 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/getter-template-with-optional-in-idea.html</link>
        <guid isPermaLink="true">http://localhost:4000/getter-template-with-optional-in-idea.html</guid>
      </item>
      
    
      
      <item>
        <title>Java Keytool</title>
        
          <description>&lt;p&gt;Java Keytool is a key and certificate management utility. It allows users
to manage their own public/private key pairs and certificates. It also
allows users to cache certificates. Java Keytool stores the keys and
certificates in what is called a keystore. By default the Java keystore
is implemented as a file. It protects private keys with a password. A Keytool
keystore contains the private key and any certificates necessary to complete
a chain of trust and establish the trustworthiness of the primary certificate.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 17 Jun 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/keytool.html</link>
        <guid isPermaLink="true">http://localhost:4000/keytool.html</guid>
      </item>
      
    
      
      <item>
        <title>NoSQL Databases Types</title>
        
          <description>&lt;p&gt;There are 4 basic types of NoSQL databases:&lt;/p&gt;

</description>
        
        <pubDate>Thu, 11 May 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/nosql-database-types.html</link>
        <guid isPermaLink="true">http://localhost:4000/nosql-database-types.html</guid>
      </item>
      
    
      
      <item>
        <title>Three-phase commit protocol - 3PC</title>
        
          <description>&lt;p&gt;Three-phase commit protocol (3PC) is a distributed algorithm which lets
all nodes in a distributed system agree to commit a transaction. Unlike
the two-phase commit protocol (2PC) however, 3PC is non-blocking.
Specifically, 3PC places an upper bound on the amount of time required
before a transaction either commits or aborts. This property ensures
that if a given transaction is attempting to commit via 3PC and holds
resource locks, it will release the locks after the timeout.
Three-Phase Commit protocol - a non-blocking protocol.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 10 May 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/3pc.html</link>
        <guid isPermaLink="true">http://localhost:4000/3pc.html</guid>
      </item>
      
    
      
      <item>
        <title>Data normalization</title>
        
          <description>&lt;p&gt;Data normalization is a process then data attributes within a data model
are organized  in the columns and tables of a relational database to
reduce data redundancy, improve data integrity and to increase the
cohesion of entity types.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 07 May 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/data-normalization.html</link>
        <guid isPermaLink="true">http://localhost:4000/data-normalization.html</guid>
      </item>
      
    
      
      <item>
        <title>Data denormalization</title>
        
          <description>&lt;p&gt;Denormalization is the process for improving the read performance of a
database, at the expense of losing write performance, by adding redundant
copies of data or by grouping data.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 07 May 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/data-denormalization.html</link>
        <guid isPermaLink="true">http://localhost:4000/data-denormalization.html</guid>
      </item>
      
    
      
      <item>
        <title>Load Balancing Algorithms</title>
        
          <description>&lt;p&gt;Load balancers distribute traffic among multiple backend servers.
If one of those servers goes down, a load balancer will redirect traffic
to the others, assuring that your services continue to be available.
A load balancer also allows you to add additional resources to handle a
temporary traffic spike or a more consistent increase in demand.
Load balancing aims to optimize resource use, maximize throughput,
minimize response time, and avoid overload of any single resource.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 06 May 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/load-balancing-algorithms.html</link>
        <guid isPermaLink="true">http://localhost:4000/load-balancing-algorithms.html</guid>
      </item>
      
    
      
      <item>
        <title>Two-phase commit protocol - 2PC</title>
        
          <description>&lt;p&gt;2PC is a distributed algorithm that coordinates all the processes that
participate in a distributed atomic transaction to ensure that either all
the resources are updated or none of them.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 06 May 2017 00:00:00 +0300</pubDate>
        <link>
        http://localhost:4000/2pc.html</link>
        <guid isPermaLink="true">http://localhost:4000/2pc.html</guid>
      </item>
      
    
      
      <item>
        <title>Transaction properties - ACID</title>
        
          <description>&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; (atomicity, consistency, isolation, and durability) is an acronym
primary attributes ensured to any transaction by a transaction manager
(which is also called a transaction monitor) or simplifying is a set of
properties of database transactions.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 02 Mar 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/transaction-properties.html</link>
        <guid isPermaLink="true">http://localhost:4000/transaction-properties.html</guid>
      </item>
      
    
      
      <item>
        <title>Eventual consistency</title>
        
          <description>&lt;p&gt;A distributed system maintains copies of its data on multiple machines in order to provide high availability and scalability.
When an application makes a change to a data item on one machine, that change has to be propagated to the other replicas.
Since the change propagation is not instantaneous, there’s an interval of time during which some of the copies will have the most recent change, but others won’t.
In other words, the copies will be mutually inconsistent. However, the change will eventually be propagated to all the copies, and hence the term “eventual consistency”.
The term eventual consistency is simply an acknowledgement that there is an unbounded delay in propagating a change made on one machine to all the other copies.
Eventual consistency is not meaningful or relevant in centralized (single copy) systems since there’s no need for propagation.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 01 Mar 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/eventual-consistency.html</link>
        <guid isPermaLink="true">http://localhost:4000/eventual-consistency.html</guid>
      </item>
      
    
      
      <item>
        <title>CAP Theorem</title>
        
          <description>&lt;h2 id=&quot;cap---consistency-availability-partition-tolerance&quot;&gt;CAP - Consistency, Availability, Partition Tolerance&lt;/h2&gt;

</description>
        
        <pubDate>Tue, 28 Feb 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/cap-theorem.html</link>
        <guid isPermaLink="true">http://localhost:4000/cap-theorem.html</guid>
      </item>
      
    
      
      <item>
        <title>Nginx</title>
        
          <description>&lt;h2 id=&quot;nginx&quot;&gt;NGINX&lt;/h2&gt;

</description>
        
        <pubDate>Wed, 04 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/nginx.html</link>
        <guid isPermaLink="true">http://localhost:4000/nginx.html</guid>
      </item>
      
    
      
      <item>
        <title>Mongodb</title>
        
          <description>&lt;h2 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h2&gt;

</description>
        
        <pubDate>Tue, 03 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/mongodb.html</link>
        <guid isPermaLink="true">http://localhost:4000/mongodb.html</guid>
      </item>
      
    
      
      <item>
        <title>Kibana</title>
        
          <description>&lt;h2 id=&quot;kibana&quot;&gt;Kibana&lt;/h2&gt;

</description>
        
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/kibana.html</link>
        <guid isPermaLink="true">http://localhost:4000/kibana.html</guid>
      </item>
      
    
      
      <item>
        <title>S.O.L.I.D principles</title>
        
          <description>&lt;p&gt;The S.O.L.I.D principles of Object Oriented Design(OOD) include these five principles.&lt;/p&gt;

</description>
        
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/solid-principles.html</link>
        <guid isPermaLink="true">http://localhost:4000/solid-principles.html</guid>
      </item>
      
    
      
      <item>
        <title>Teamcity</title>
        
          <description>&lt;h2 id=&quot;teamcity&quot;&gt;TeamCity&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/teamcity.html</link>
        <guid isPermaLink="true">http://localhost:4000/teamcity.html</guid>
      </item>
      
    
      
      <item>
        <title>Ribbon</title>
        
          <description>&lt;h2 id=&quot;ribbon---netflix-oss&quot;&gt;Ribbon - Netflix OSS&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/ribbon.html</link>
        <guid isPermaLink="true">http://localhost:4000/ribbon.html</guid>
      </item>
      
    
      
      <item>
        <title>Neo4j</title>
        
          <description>&lt;h2 id=&quot;neo4j&quot;&gt;Neo4j&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/neo4j.html</link>
        <guid isPermaLink="true">http://localhost:4000/neo4j.html</guid>
      </item>
      
    
      
      <item>
        <title>Hystrix</title>
        
          <description>&lt;h2 id=&quot;hystrix---netflix-oss&quot;&gt;Hystrix - Netflix OSS&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/hystrix.html</link>
        <guid isPermaLink="true">http://localhost:4000/hystrix.html</guid>
      </item>
      
    
      
      <item>
        <title>Elasticsearch</title>
        
          <description>&lt;h2 id=&quot;elasticsearch&quot;&gt;Elasticsearch&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/elasticsearch.html</link>
        <guid isPermaLink="true">http://localhost:4000/elasticsearch.html</guid>
      </item>
      
    
      
      <item>
        <title>Inversion of Control - Pattern</title>
        
          <description>&lt;p&gt;Inversion of Control is a design pattern means injecting dependencies
into a component when it is constructed, by that to invert a control of
dependencies creation goes to outside. It leads to decoupling components
and layers in the system.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/ioc.html</link>
        <guid isPermaLink="true">http://localhost:4000/ioc.html</guid>
      </item>
      
    
      
      <item>
        <title>Travis</title>
        
          <description>&lt;h2 id=&quot;travis-ci&quot;&gt;Travis CI&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 10 Jan 2016 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/travis.html</link>
        <guid isPermaLink="true">http://localhost:4000/travis.html</guid>
      </item>
      
    
      
      <item>
        <title>Jenkins</title>
        
          <description>&lt;h2 id=&quot;jenkins&quot;&gt;Jenkins&lt;/h2&gt;

</description>
        
        <pubDate>Wed, 06 Jan 2016 00:00:00 +0200</pubDate>
        <link>
        http://localhost:4000/jenkins.html</link>
        <guid isPermaLink="true">http://localhost:4000/jenkins.html</guid>
      </item>
      
    
  </channel>
</rss>
