---
title: Two-phase commit protocol - 2PC
description: 2pc,two-phase commit protocol,two-phase,phase,commit,protocol,database
---
The two-phase commit protocol (**2PC**) is a distributed **algorithm** that coordinates all the processes that
participate in a distributed **atomic** transaction to ensure that either all
the resources are updated, or none of them.

The two-phase commit protocol is an atomic commitment protocol for distributed
systems. This protocol, as its name implies, consists of two phases.
The first one is the commit-request phase, in which the transaction manager coordinates
all of the transaction resources to commit or abort. In the commit phase,
the transaction manager decides to finalize the operation by committing or
aborting according to the votes of each transaction resource.

2PC protocol guarantees global **atomicity**; its most significant **drawback** is that
it is a **blocking protocol**. Whenever the coordinator fails, cohort sites
will have to wait for its recovery. This is undesirable as these sites
may be holding locks on the resources. In the event of message loss,
the two-phase protocol will result in the sending of more messages.

---

![]({{site.baseurl}}/images/2pc2.gif)

---

The two-phase commit protocol consists of the following steps:

1. The coordinator sends a request to all participants to prepare to commit the transaction.
2. Each participant prepares to commit the transaction by performing any necessary actions, such as acquiring locks or reserving resources.
3. Each participant sends a response to the coordinator indicating whether it is ready to commit the transaction.
4. If all participants are ready to commit the transaction, the coordinator sends a commit request to all participants.
5. Each participant commits the transaction by making the necessary changes to its database or other resources.
6. The coordinator sends a confirmation to all participants that the transaction has been committed.

2PC is particularly useful in environments where it is important to ensure the consistency and integrity of data across
multiple resources. However, it can be slower than other approaches due to the need to communicate with all
participants in each phase of the process.

---
